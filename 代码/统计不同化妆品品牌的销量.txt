package mapreduce203;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import java.io.IOException;

public class AverageScore {

    public static class AverageScoreMapper extends Mapper<LongWritable, Text, Text, DoubleWritable> {
        private final static DoubleWritable one = new DoubleWritable(1);
        private Text store = new Text();
        private DoubleWritable sale_count = new DoubleWritable();

        public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
            String[] words = value.toString().split(",");
            if (words.length != 2) {
                store.set(words[6]);
                sale_count.set(Double.parseDouble(words[4]));
                context.write(store, sale_count);
            }
        }
    }

    public static class AverageScoreReducer extends Reducer<Text, DoubleWritable, Text, DoubleWritable> {
        private DoubleWritable result = new DoubleWritable();

        public void reduce(Text key, Iterable<DoubleWritable> values, Context context) throws IOException, InterruptedException {
            double sum = 0;
            for (DoubleWritable val : values) {
                sum += val.get();
//                count++;
            }
            result.set(sum);
//            result.set(sum / count);
            context.write(key, result);
        }
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "average score");
        job.setJarByClass(AverageScore.class);
        job.setMapperClass(AverageScoreMapper.class);
        job.setCombinerClass(AverageScoreReducer.class);
        job.setReducerClass(AverageScoreReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(DoubleWritable.class);
        FileInputFormat.addInputPath(job, new Path("D:\\homework\\hadoop_work\\meizhuang.csv"));
        FileOutputFormat.setOutputPath(job, new Path("D:\\homework\\shixun\\output02"));
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}

